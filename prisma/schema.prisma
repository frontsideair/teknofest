datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int          @id @default(autoincrement())
  fullName     String       @default("")
  email        String       @unique
  role         String       @default("student") // "admin", "advisor", "student"
  passwordHash String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  advisorOf    Team[]       @relation("teamAdvisor")
  teams        TeamMember[]
}

model Contest {
  id    Int    @id @default(autoincrement())
  name  String @unique
  teams Team[]

  applicationStart DateTime
  applicationEnd   DateTime

  letterUploadStart DateTime
  letterUploadEnd   DateTime

  designReportStart DateTime
  designReportEnd   DateTime

  techControlsStart DateTime
  techControlsEnd   DateTime

  finalRaceStart DateTime
  finalRaceEnd   DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id         Int          @id @default(autoincrement())
  name       String
  contestId  Int
  contest    Contest      @relation(fields: [contestId], references: [id])
  advisor    User         @relation(name: "teamAdvisor", fields: [advisorId], references: [id])
  advisorId  Int
  inviteCode String       @unique @default(uuid())
  members    TeamMember[]

  progressReportPath String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, contestId])
  @@unique([advisorId, contestId])
}

model TeamMember {
  team                   Team     @relation(fields: [teamId], references: [id])
  teamId                 Int
  user                   User     @relation(fields: [userId], references: [id])
  userId                 Int
  isCaptain              Boolean  @default(false)
  pilotingResponsibility String? // "pilot", "copilot", null
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  @@id([teamId, userId])
}
